{"version":3,"sources":["logo.svg","Components/card/Card.Component.jsx","Components/cardList/cardList.Component.jsx","Components/searchBox/searchBox.Component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","changeHandler","type","onChange","App","handleChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterdMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAe,I,kBCIFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA2BF,EAAMG,QAAQC,GAAzC,4BACR,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,YCHbC,G,MAAW,SAACP,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMQ,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLdM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,cAAf,OACrB,uBAAOX,UAAU,SAASY,KAAK,SAASF,YAAeA,EAAaG,SAAUF,MCqCnEG,E,kDAlCb,aAAc,IAAD,8BACX,gBAOFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SANzC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALJ,E,qDAYb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAWmB,S,oBAG3C,WACE,MAAgCC,KAAKN,MAA9Bd,EAAP,EAAOA,SAAUW,EAAjB,EAAiBA,YACXU,EAAkBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC7CA,EAAQE,KAAK0B,cACZC,SAASb,EACTY,kBACL,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWU,YAAY,kBAAkBC,cAAegB,KAAKZ,eAC7D,cAAC,EAAD,CAAUR,SAAWqB,W,GA7BTI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ab3c64fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nimport './card.styles.css';\n\nexport const Card = (props) => (\n    <div className=\"card-container\">\n        <img src ={`https://robohash.org/${props.monster.id}?set=set1&size=180x180`}/>\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n)","import React from \"react\";\nimport { Card } from \"../card/Card.Component\";\n\nimport \"./card-list.styles.css\";\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};","import React from \"react\";\n\nimport './search-box.styles.css'\n\nexport const SearchBox = ({placeholder, changeHandler}) =>(\n    <input className=\"search\" type=\"search\" placeholder = {placeholder} onChange={changeHandler}/>\n)","import { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { CardList } from './Components/cardList/cardList.Component';\nimport {SearchBox} from './Components/searchBox/searchBox.Component'\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n}\n  }\n  handleChange = (event) => {\n    this.setState({searchField: event.target.value})\n  }\n\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}))\n    }\n    \n  render(){\n    const {monsters, searchField} = this.state;\n    const filterdMonsters = monsters.filter(monster => (\n      monster.name.toLowerCase()\n      .includes(searchField\n      .toLowerCase())))\n  return (\n    <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox placeholder=\"search monsters\" changeHandler={this.handleChange}/>\n      <CardList monsters= {filterdMonsters}/>  \n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}